#!/bin/bash
# notification: showVolume
# Moded from https://wiki.archlinux.org/index.php/Dunst#Using_dunstify_as_volume/brightness_level_indicator

# Arbitrary but unique message id
msgId="71337073"

case "$1" in
inc)
	pactl set-sink-volume `pacmd list-sinks|awk '{ if($1=="*"){print $NF}}'` +5%
	pkill -rtmin+1 i3blocks
	;;

dec)
	pactl set-sink-volume `pacmd list-sinks|awk '{ if($1=="*"){print $NF}}'` -5%
	pkill -rtmin+1 i3blocks
	;;

toggle)
	pactl set-sink-mute `pacmd list-sinks|awk '{ if($1=="*"){print $NF}}'`  toggle;
	exec  pkill -rtmin+1 i3blocks
	;;
esac


# Query amixer for the current volume and whether or not the speaker is muted
volume="$(amixer -D pulse get Master | tail -1 | grep -Eo '[0-9]+%' | tr -d '%')"
status="$(amixer -D pulse get Master | tail -1 | grep -Eo '\[(on|off)\]' | tr -d '[]')"
if [[ "$volume" == 0 || "$status" == "off" ]]; then
    # Show the sound muted notification
    dunstify -a "showVolume"  -i audio-volume-muted -r "$msgId" "Volume muted" 
else
    # Show the volume notification
    dunstify -a "showVolume"  -i audio-volume-high -t 1000 -r "$msgId" \
		"Volume: ${volume}%" "$($HOME/bin/getProgressString 10 "<b> </b>" " " $((volume/2)))"
fi

# Play the volume changed sound
canberra-gtk-play -i audio-volume-change -d "changeVolume"
